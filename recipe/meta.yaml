{% set version = "5.1.0" %}

package:
  name: heyoka
  version: {{ version }}

source:
  url: https://github.com/bluescarni/heyoka/archive/v{{ version }}.tar.gz
  sha256: dd405328ace718865ae2690384fbf5f7ee4d03ab6821b908e7d0ca0a02c35e14

build:
  number: 1
  ignore_run_exports_from:
    # NOTE: on most platforms, except
    # PPC64, we are forcing static linking
    # to LLVM in a desperate attempt to hide
    # LLVM symbols so that heyoka can coexist
    # (maybe) with other libraries linking to
    # different LLVM versions. On the other hand,
    # the conda packages for llvm/llvmdev inject
    # (on some platforms at least) a run_export()
    # dependency under the assumption
    # that dynamic linking is being used. We want to
    # avoid that, as the whole point is to hide
    # the presence of LLVM as much as possible.
    - llvmdev  # [not ppc64le]
    - llvm     # [not ppc64le]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - {{ compiler('cxx') }}
    - cmake >=3.18.0
    - ninja       # [unix]
    - make        # [unix]

outputs:
  - name: heyoka
    requirements:
      host:
        - llvmdev
        - llvm
        - libboost-devel
        # NOTE: this one is needed only
        # on some platforms and LLVM versions.
        # Just leave it everywhere even if
        # it will result in some overlinking.
        - zstd
        # NOTE: need some coordination between fmt and spdlog
        # versions.
        - fmt =11.*
        - spdlog =1.14.*
        # NOTE: pin due to this bug:
        # https://github.com/oneapi-src/oneTBB/issues/1417
        - tbb-devel =2021.10.0
        - sleef
        - gmp           # [unix]
        - mpir          # [win]
        - mpfr
        - xtensor       # [not osx]
        - xtensor-blas  # [not osx]
        - blas          # [not osx]
        - blas-devel    # [not osx]
        - mppp =1.*
        - zlib          # [not ppc64le]
    build:
      run_exports:
        # SO name changes at minor rev bumps.
        - {{ pin_subpackage('heyoka', max_pin='x.x') }}
    files:
      - lib/libheyoka*{{ SHLIB_EXT }}   # [not win]
      - lib/libheyoka.so.*              # [linux]
      - lib/libheyoka.*.dylib           # [osx]
      - Library/bin/heyoka.dll          # [win]
      - include/heyoka                  # [not win]
      - lib/cmake/heyoka                # [not win]
      - Library/include/heyoka          # [win]
      - Library/lib/heyoka.lib          # [win]
      - Library/lib/cmake/heyoka        # [win]
    test:
      commands:
        - test -f $PREFIX/include/heyoka/heyoka.hpp               # [unix]
        - if not exist %PREFIX%\\Library\\include\\heyoka\\heyoka.hpp exit 1   # [win]
  - name: heyoka-llvm-{{ llvmdev }}
    requirements:
      host:
        - llvmdev
        - llvm
        - libboost-devel
        - zstd
        - fmt =11.*
        - spdlog =1.14.*
        - tbb-devel =2021.10.0
        - sleef
        - gmp           # [unix]
        - mpir          # [win]
        - mpfr
        - xtensor       # [not osx]
        - xtensor-blas  # [not osx]
        - blas          # [not osx]
        - blas-devel    # [not osx]
        - mppp =1.*
        - zlib          # [not ppc64le]
        - {{ pin_subpackage('heyoka', exact=True) }}
      run:
        - {{ pin_subpackage('heyoka', exact=True) }}
    build:
      run_exports:
        - {{ pin_subpackage('heyoka', exact=True) }}
    test:
      commands:
        - test true               # [unix]

about:
  home: https://bluescarni.github.io/heyoka/
  license: MPL-2.0
  license_file: COPYING
  summary: A C++ library for ODE integration via Taylor's method, based on LLVM

extra:
  recipe-maintainers:
    - bluescarni
