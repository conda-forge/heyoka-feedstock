{% set version = "7.4.0" %}

package:
  name: heyoka
  version: {{ version }}

source:
  url: https://github.com/bluescarni/heyoka/archive/v{{ version }}.tar.gz
  sha256: e6ea1900f90b7bfd96ce0f0afe81fcbf9c2c2c7321f222f53d45b747e582824e

build:
  number: 0
  run_exports:
    # SO name changes at minor rev bumps.
    - {{ pin_subpackage('heyoka', max_pin='x.x') }}
  ignore_run_exports_from:
    # NOTE: on most platforms, except
    # PPC64, we are forcing static linking
    # to LLVM in a desperate attempt to hide
    # LLVM symbols so that heyoka can coexist
    # (maybe) with other libraries linking to
    # different LLVM versions. On the other hand,
    # the conda packages for llvm/llvmdev inject
    # (on some platforms at least) a run_export()
    # dependency under the assumption
    # that dynamic linking is being used. We want to
    # avoid that, as the whole point is to hide
    # the presence of LLVM as much as possible.
    - llvmdev  # [not ppc64le]
    - llvm     # [not ppc64le]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - {{ compiler('cxx') }}
    - cmake >=3.20.0
    - ninja       # [unix]
  host:
    # NOTE: we aim to use the latest LLVM version here.
    - llvmdev ==20.*
    - llvm ==20.*
    - libboost-devel
    # NOTE: this one is needed only
    # on some platforms and LLVM versions.
    # Just leave it everywhere even if
    # it will result in some overlinking.
    - zstd
    - fmt
    - spdlog
    - tbb-devel
    - sleef
    - gmp
    - mpfr
    - openssl
    - xtensor       # [not osx]
    - xtensor-blas  # [not osx]
    - blas          # [not osx]
    - blas-devel    # [not osx]
    - mppp
    - zlib          # [not ppc64le]
  run:

test:
  commands:
    - test -f $PREFIX/include/heyoka/heyoka.hpp               # [unix]
    - if not exist %PREFIX%\\Library\\include\\heyoka\\heyoka.hpp exit 1   # [win]

about:
  home: https://bluescarni.github.io/heyoka/
  license: MPL-2.0
  license_file: COPYING
  summary: A C++ library for ODE integration via Taylor's method, based on LLVM

extra:
  recipe-maintainers:
    - bluescarni
